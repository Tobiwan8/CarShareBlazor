@page "/owned-cars"

@inject NavigationManager navMan
@attribute [Authorize(Roles = "Admin,User")]
@rendermode InteractiveServer

<h3>Owned Cars</h3>
@if(carsOwnedList == null || !carsOwnedList.Any())
{
    <span>you currently don't own any cars</span>
}
else
{
    <div style="max-height: 400px; overflow-y: auto; display: block;">
        <table class="table">
            <thead style="background:white">
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Licenseplate</th>
                </tr>
            </thead>
            <tbody class="tbody">
                @foreach (CarModel car in carsOwnedList!)
                {
                    <tr @onclick="() => SelectRow(car.ID)" style="cursor:pointer; @SelectRowColor(car.ID)">
                        <td>@car.ID</td>
                        <td>@car.Name</td>
                        <td>@car.Licenseplate</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<button class="btn btn-primary" @onclick="GoToAddCar">Add Car</button>

@if(carSelected is not null)
{
    <div class="carselectedcontainer">
        <div style="width:50%">
            <div class="carchosen">
                <div>
                    <label>ID:</label>
                    <input type="number" @bind="carSelected.ID" disabled="disabled"/>
                </div>
                <div>
                    <label>Name</label>
                    <input @bind="carSelected.Name" disabled="disabled"/>
                </div>
                <div>
                    <label>Licenceplate</label>
                    <input @bind="carSelected.Licenseplate" disabled="disabled" />
                </div>
                <button class="btn btn-primary">Edit</button>
            </div>
        </div>
        <div style="max-height: 400px; max-width:100%; overflow-y: auto; display: block;">
            <h5>Car users</h5>
            <table class="table">
                <thead style="background:white">
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Licenseplate</th>
                    </tr>
                </thead>
                <tbody class="tbody">
                    @foreach (CarModel car in carsOwnedList!)
                    {
                        <tr @onclick="() => SelectRow(car.ID)" style="cursor:pointer; @SelectRowColor(car.ID)">
                            <td>@car.ID</td>
                            <td>@car.Name</td>
                            <td>@car.Licenseplate</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

}




@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationStateTask { get; set; }

    private GetOwnedCars? getOwnedCars;

    private List<CarModel>? carsOwnedList;
    private CarModel? carSelected;

    private int personID;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await authenticationStateTask!;
        var userIdClaim = authenticationState.User.FindFirst("personID");
        if(userIdClaim is not null)
        {
            personID = Convert.ToInt32(userIdClaim.Value);
        }

        getOwnedCars = new();
        carsOwnedList = new();
        carsOwnedList = await getOwnedCars.GetOwnedCarsAsync(personID);
    }

    private void SelectRow(int carID)
    {
        carSelected = carsOwnedList!.FirstOrDefault(c => c.ID == carID);
    }

    private string SelectRowColor(Int64 id)
    {
        if (carSelected != null && id == carSelected.ID)
        {
            return "background:#4CBFE1";
        }
        return "";
    }

    private void GoToAddCar()
    {
        navMan.NavigateTo("/add-car");
    }
}
